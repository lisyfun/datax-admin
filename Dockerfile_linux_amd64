# 第一阶段：构建后端
FROM --platform=linux/amd64 golang:1.22.2-alpine as backend-builder
WORKDIR /app/backend
COPY backend/go.mod backend/go.sum ./
RUN go mod download
COPY backend .
RUN go build -o datax-admin .

# 第二阶段：最终镜像
FROM --platform=linux/amd64 caddy:2.7-alpine
WORKDIR /srv

# 设置时区
RUN apk add --no-cache tzdata && \
    cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && \
    echo "Asia/Shanghai" > /etc/timezone && \
    apk del tzdata

# 复制前端构建产物
COPY frontend/dist /srv/dist

# 复制后端二进制和配置
COPY --from=backend-builder /app/backend/datax-admin /app/datax-admin
COPY --from=backend-builder /app/backend/config.yaml /app/config.yaml
COPY --from=backend-builder /app/backend/bin/datax_linux_amd64 /app/bin/datax

# 创建 Caddyfile
RUN printf "{\n\
    admin off\n\
}\n\
\n\
:80 {\n\
    redir / /datax 301\n\
    handle /datax* {\n\
        root * /srv/dist\n\
        route /datax/api/* {\n\
            uri strip_prefix /datax\n\
            reverse_proxy http://localhost:8080\n\
        }\n\
        route {\n\
            uri strip_prefix /datax\n\
            try_files {path} /index.html\n\
        }\n\
        file_server\n\
        encode gzip\n\
    }\n\
}" > /etc/caddy/Caddyfile

# 创建启动脚本
WORKDIR /app
RUN printf '#!/bin/sh\n\
./datax-admin & \n\
caddy run --config /etc/caddy/Caddyfile\n' > start.sh && \
chmod +x start.sh

EXPOSE 80
CMD ["sh", "/app/start.sh"]
